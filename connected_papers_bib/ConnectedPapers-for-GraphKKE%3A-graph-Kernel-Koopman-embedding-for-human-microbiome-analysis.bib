@article{264399b9917e0d3bf099540a14684f72e031cc7b,
title = {GraphKKE: graph Kernel Koopman embedding for human microbiome analysis},
year = {2020},
url = {https://www.semanticscholar.org/paper/264399b9917e0d3bf099540a14684f72e031cc7b},
abstract = {More and more diseases have been found to be strongly correlated with disturbances in the microbiome constitution, e.g., obesity, diabetes, or some cancer types. Thanks to modern high-throughput omics technologies, it becomes possible to directly analyze human microbiome and its influence on the health status. Microbial communities are monitored over long periods of time and the associations between their members are explored. These relationships can be described by a time-evolving graph. In order to understand responses of the microbial community members to a distinct range of perturbations such as antibiotics exposure or diseases and general dynamical properties, the time-evolving graph of the human microbial communities has to be analyzed. This becomes especially challenging due to dozens of complex interactions among microbes and metastable dynamics. The key to solving this problem is the representation of the time-evolving graphs as fixed-length feature vectors preserving the original dynamics. We propose a method for learning the embedding of the time-evolving graph that is based on the spectral analysis of transfer operators and graph kernels. We demonstrate that our method can capture temporary changes in the time-evolving graph on both synthetic data and real-world data. Our experiments demonstrate the efficacy of the method. Furthermore, we show that our method can be applied to human microbiome data to study dynamic processes.},
author = {K. Melnyk and Stefan Klus and G. Montavon and T. Conrad},
doi = {10.1007/s41109-020-00339-2},
arxivid = {2008.05903},
}

@article{63343ce3141e4ceed96222a8388b14537cc52a65,
title = {tdGraphEmbed: Temporal Dynamic Graph-Level Embedding},
year = {2020},
url = {https://www.semanticscholar.org/paper/63343ce3141e4ceed96222a8388b14537cc52a65},
abstract = {Temporal dynamic graphs are graphs whose topology evolves over time, with nodes and edges added and removed between different time snapshots. Embedding such graphs in a low-dimensional space is important for a variety of tasks, including graphs' similarities, time series trends analysis and anomaly detection, graph visualization, graph classification, and clustering. Despite the importance of the temporal element in these tasks, existing graph embedding methods focus on capturing the graph's nodes in a static mode and/or do not model the graph in its entirety in temporal dynamic mode. In this study, we present tdGraphEmbed, a novel temporal graph-level embedding approach that extend the random-walk based node embedding methods to globally embed both the nodes of the graph and its representation at each time step, thus creating representation of the entire graph at each step. Our approach was applied to graph similarity ranking, temporal anomaly detection, trend analysis, and graph visualizations tasks, where we leverage our temporal embedding in a fast and scalable way for each of the tasks. An evaluation of tdGraphEmbed on five real-world datasets shows that our approach can outperform state-of-the-art approaches used for graph embedding and node embedding in temporal graphs.},
author = {Moran Beladev and L. Rokach and Gilad Katz and Ido Guy and Kira Radinsky},
doi = {10.1145/3340531.3411953},
}

@article{41831b270652df9671091051bbf5122a209f47bd,
title = {MrMine: Multi-resolution Multi-network Embedding},
year = {2019},
url = {https://www.semanticscholar.org/paper/41831b270652df9671091051bbf5122a209f47bd},
abstract = {Network embedding has become the cornerstone of a variety of mining tasks, such as classification, link prediction, clustering, anomaly detection and many more, thanks to its superior ability to encode the intrinsic network characteristics in a compact low-dimensional space. Most of the existing methods focus on a single network and/or a single resolution, which generate embeddings of different network objects (node/subgraph/network) from different networks separately. A fundamental limitation with such methods is that the intrinsic relationship across different networks (e.g., two networks share same or similar subgraphs) and that across different resolutions (e.g., the node-subgraph membership) are ignored, resulting in disparate embeddings. Consequentially, it leads to sub-optimal performance or even becomes inapplicable for some downstream mining tasks (e.g., role classification, network alignment. etc.). In this paper, we propose a unified framework MrMine to learn the representations of objects from multiple networks at three complementary resolutions (i.e., network, subgraph and node) simultaneously. The key idea is to construct the cross-resolution cross-network context for each object. The proposed method bears two distinctive features. First, it enables and/or boosts various multi-network downstream mining tasks by having embeddings at different resolutions from different networks in the same embedding space. Second, Our method is efficient and scalable, with a O(nlog(n)) time complexity for the base algorithm and a linear time complexity w.r.t. the number of nodes and edges of input networks for the accelerated version. Extensive experiments on real-world data show that our methods (1) are able to enable and enhance a variety of multi-network mining tasks, and (2) scale up to million-node networks.},
author = {Boxin Du and Hanghang Tong},
doi = {10.1145/3357384.3357944},
}

@article{a2ccc843fc32e6bbb75015b9b0e25a0e3eaaebb2,
title = {Sequence-to-sequence modeling for graph representation learning},
year = {2019},
url = {https://www.semanticscholar.org/paper/a2ccc843fc32e6bbb75015b9b0e25a0e3eaaebb2},
abstract = {We propose sequence-to-sequence architectures for graph representation learning in both supervised and unsupervised regimes. Our methods use recurrent neural networks to encode and decode information from graph-structured data. Recurrent neural networks require sequences, so we choose several methods of traversing graphs using different types of substructures with various levels of granularity to generate sequences of nodes for encoding. Our unsupervised approaches leverage long short-term memory (LSTM) encoder-decoder models to embed the graph sequences into a continuous vector space. We then represent a graph by aggregating its graph sequence representations. Our supervised architecture uses an attention mechanism to collect information from the neighborhood of a sequence. The attention module enriches our model in order to focus on the subgraphs that are crucial for the purpose of a graph classification task. We demonstrate the effectiveness of our approaches by showing improvements over the existing state-of-the-art approaches on several graph classification tasks.},
author = {Aynaz Taheri and Kevin Gimpel and T. Berger-Wolf},
doi = {10.1007/s41109-019-0174-8},
}

@article{6e44b7f80f87434bb889aa740df6302768518e26,
title = {Structural-Temporal embedding of large-scale dynamic networks with parallel implementation},
year = {2022},
url = {https://www.semanticscholar.org/paper/6e44b7f80f87434bb889aa740df6302768518e26},
abstract = {},
author = {Lu-Yao Xie and Hong Shen and Dawei Feng},
doi = {10.1016/j.compeleceng.2022.107835},
}

@article{6defbab18454fe8a598077590734ad020b06ff14,
title = {Substructure Assembling Network for Graph Classification},
year = {2018},
url = {https://www.semanticscholar.org/paper/6defbab18454fe8a598077590734ad020b06ff14},
abstract = {
 
 Graphs are natural data structures adopted to represent real-world data of complex relationships. In recent years, a surge of interest has been received to build predictive models over graphs, with prominent examples in chemistry, computational biology, and social networks. The overwhelming complexity of graph space often makes it challenging to extract interpretable and discriminative structural features for classification tasks. In this work, we propose a novel neural network structure called Substructure Assembling Network (SAN) to extract graph features and improve the generalization performance of graph classification. The key innovation of our work is a unified substructure assembling unit, which is a variant of Recurrent Neural Network (RNN) designed to hierarchically assemble useful pieces of graph components so as to fabricate discriminative substructures. SAN adopts a sequential, probabilistic decision process, and therefore it can tune substructure features in a finer granularity. Meanwhile, the parameterized soft decisions can be continuously improved with supervised learning through back-propagation, leading to optimizable search trajectories. Overall, SAN embraces both the flexibility of combinatorial pattern search and the strong optimizability of deep learning, and delivers promising results as well as interpretable structural features in graph classification against state-of-the-art techniques.
 
},
author = {Xiaohan Zhao and Bo Zong and Ziyu Guan and Kai Zhang and Wei Zhao},
doi = {10.1609/aaai.v32i1.11742},
}

@article{3f147d5150aead1c38d386b7938ba8b8ee3d10e9,
title = {Apk2vec: Semi-Supervised Multi-view Representation Learning for Profiling Android Applications},
year = {2018},
url = {https://www.semanticscholar.org/paper/3f147d5150aead1c38d386b7938ba8b8ee3d10e9},
abstract = {Building behavior profiles of Android applications (apps) with holistic, rich and multi-view information (e.g., incorporating several semantic views of an app such as API sequences, system calls, etc.) would help catering downstream analytics tasks such as app categorization, recommendation and malware analysis significantly better. Towards this goal, we design a semisupervised Representation Learning (RL) framework named apk2vec to automatically generate a compact representation (aka profile/embedding) for a given app. More specifically, apk2vec has the three following unique characteristics which make it an excellent choice for large-scale app profiling: (1) it encompasses information from multiple semantic views such as API sequences, permissions, etc., (2) being a semi-supervised embedding technique, it can make use of labels associated with apps (e.g., malware family or app category labels) to build high quality app profiles, and (3) it combines RL and feature hashing which allows it to efficiently build profiles of apps that stream over time (i.e., online learning). The resulting semi-supervised multi-view hash embeddings of apps could then be used for a wide variety of downstream tasks such as the ones mentioned above. Our extensive evaluations with more than 42,000 apps demonstrate that apk2vec's app profiles could significantly outperform state-of-the-art techniques in four app analytics tasks namely, malware detection, familial clustering, app clone detection and app recommendation.},
author = {A. Narayanan and C. Soh and Lihui Chen and Yang Liu and Lipo Wang},
doi = {10.1109/ICDM.2018.00051},
arxivid = {1809.05693},
}

@article{ef1ca41cc6ed1b34cfe3d34a6150912cfc5aed3b,
title = {Semi-Supervised Graph Classification: A Hierarchical Graph Perspective},
year = {2019},
url = {https://www.semanticscholar.org/paper/ef1ca41cc6ed1b34cfe3d34a6150912cfc5aed3b},
abstract = {Node classification and graph classification are two graph learning problems that predict the class label of a node and the class label of a graph respectively. A node of a graph usually represents a real-world entity, e.g., a user in a social network, or a protein in a protein-protein interaction network. In this work, we consider a more challenging but practically useful setting, in which a node itself is a graph instance. This leads to a hierarchical graph perspective which arises in many domains such as social network, biological network and document collection. For example, in a social network, a group of people with shared interests forms a user group, whereas a number of user groups are interconnected via interactions or common members. We study the node classification problem in the hierarchical graph where a “node” is a graph instance, e.g., a user group in the above example. As labels are usually limited in real-world data, we design two novel semi-supervised solutions named SEmi-supervised grAph cLassification via Cautious/Active Iteration (or SEAL-C/AI in short). SEAL-C/AI adopt an iterative framework that takes turns to build or update two classifiers, one working at the graph instance level and the other at the hierarchical graph level. To simplify the representation of the hierarchical graph, we propose a novel supervised, self-attentive graph embedding method called SAGE, which embeds graph instances of arbitrary size into fixed-length vectors. Through experiments on synthetic data and Tencent QQ group data, we demonstrate that SEAL-C/AI not only outperform competing methods by a significant margin in terms of accuracy/Macro-F1, but also generate meaningful interpretations of the learned representations.},
author = {Jia Li and Yu Rong and Hong Cheng and H. Meng and Wen-bing Huang and Junzhou Huang},
doi = {10.1145/3308558.3313461},
arxivid = {1904.05003},
}

@article{35efbd9079260042358d82f3984d98376a094a75,
title = {SNAPSKETCH: Graph Representation Approach for Intrusion Detection in a Streaming Graph},
year = {2020},
url = {https://www.semanticscholar.org/paper/35efbd9079260042358d82f3984d98376a094a75},
abstract = {In this paper, we propose a novel unsupervised graph representation approach in a graph stream called SNAPSKETCH that can be used for anomaly detection. It first performs a fixed-length random walk from each node in a network and constructs n-shingles from a walk path. The top discriminative n-shingles identified using a frequency measure are projected into a dimensional projection vector chosen uniformly at random. Finally, a graph is sketched into a low-dimensional sketch vector using a simplified hashing of the projection vector and the cost of shingles. Using the learned sketch vector, anomaly detection is done using the state-of-the-art anomaly detection approach called RRCF [1]. SNAPSKETCHhas several advantages, including fully unsupervised learning, constant memory space usage, entire-graph embedding, and real-time anomaly detection.},
author = {R. Paudel and rpaudel},
}

@article{83bb59d9104bd58dda1e141927ec299d7679ca83,
title = {Genome Sequence Classification for Animal Diagnostics with Graph Representations and Deep Neural Networks},
year = {2020},
url = {https://www.semanticscholar.org/paper/83bb59d9104bd58dda1e141927ec299d7679ca83},
abstract = {Bovine Respiratory Disease Complex (BRDC) is a complex respiratory disease in cattle with multiple etiologies, including bacterial and viral. It is estimated that mortality, morbidity, therapy, and quarantine resulting from BRDC account for significant losses in the cattle industry. Early detection and management of BRDC are crucial in mitigating economic losses. Current animal disease diagnostics is based on traditional tests such as bacterial culture, serolog, and Polymerase Chain Reaction (PCR) tests. Even though these tests are validated for several diseases, their main challenge is their limited ability to detect the presence of multiple pathogens simultaneously. Advancements of data analytics and machine learning and applications over metagenome sequencing are setting trends on several applications. In this work, we demonstrate a machine learning approach to identify pathogen signatures present in bovine metagenome sequences using k-mer-based network embedding followed by a deep learning-based classification task. With experiments conducted on two different simulated datasets, we show that networks-based machine learning approaches can detect pathogen signature with up to 89.7% accuracy. We will make the data available publicly upon request to tackle this important problem in a difficult domain.},
author = {S. Narayanan and A. Ramachandran and Sathyanarayanan N. Aakur and A. Bagavathi},
arxivid = {2007.12791},
}

@article{adf7d8908671a1b987355e1c506162760e4e3b8b,
title = {Program analysis and machine learning techniques for mobile security},
year = {2019},
url = {https://www.semanticscholar.org/paper/adf7d8908671a1b987355e1c506162760e4e3b8b},
abstract = {The rapid rise of the smartphone is mainly due to the availability of mobile applications (apps) that provide a wide range of functionalities. Statistics from International Data Corporation (IDC) has shown that Android is the most popular smartphone platform over the past few years. Due to the openness and low threshold of entering the Android app market, it has the largest collection of mobile apps. Unfortunately, it’s popularity also attracts the unwanted attention of cyber-criminals. McAfee has reported that the number of threats families found in Google Play has increased by 30% in the year 2017, resulting in more than 4 thousand mobile threat families and variants in their sample database. Over the past few years, concerns have been raised with respect to the increasing number of malicious and clone apps infiltrating the Android markets. Android malware may perform a range of malicious activities e.g., leakage of sensitive information or encrypt data and lock the user out of the compromised device for ransom. On the other hand, clone apps are repackaged apps that steal revenue from the original developer of the popular apps. Despite the advances in mobile security, the detection of malicious and clone mobile apps is non-trivial and remains an open problem. In order to differentiate these adversary apps from benign apps, an in-depth understanding of the apps is required. However, due to the arms race between the adversary apps and the detection algorithms, the adversary apps are constantly evolving and becoming more sophisticated. Hence, new and more effective algorithms are imperative. In this thesis, we address the problem of Android security by presenting new program analysis and machine learning approaches we have developed for the vetting of Android apps. The achievements made in this thesis are as follow: 1. We develop a novel approach to detect clone in Android apps by analyzing runtime user interface (UI) information. We take advantage of the unique multiple entry points characteristic of Android apps, to collect the UI information ii efficiently and avoid the need for the tedious process of having to create multiple sets of relevant inputs to navigate through the entire app. An inherent advantageous characteristic of our approach is that is it resilient to code obfuscation since semantics preserving obfuscation techniques do not have any influence on runtime behaviors. The evaluation of the proposed approach was performed on a set of real-world Android apps and the results reveal that it can achieve low false positive rate and false negative rate. We further analyze the results and observe that our approach is effective in detecting different types of repackaging attacks. 2. Third-party libraries (TPLs) are commonly found in Android apps and various reports on the privacy risks and security threats that are brought about by them have surfaced. In addition, there have also been multiple complains of TPLs hindering various program analysis tasks, such as clone detection, static taint analysis, etc. Understandably, since TPLs are typically used as it is, it may include an abundance of unnecessary code to the host app and may dilute the features and increase the complexity of the code analysis, thus affecting the accuracy and scalability of the tasks. A typical and straightforward solution for identifying and excluding the TPLs is to match the name of the packages in the app to a whitelist which holds a list of known TPL package names. However, these whitelists are vulnerable against the commonly employed renaming obfuscation technique and given the fast-paced ecosystem, it is also difficult for the whitelist to be exhaustive. Hence, we propose LibSift, a tool which automates the process of identifying TPLs in Android apps. It identifies TPLs by analyzing the package dependencies of the app allowing it to be resilient to most of the typical obfuscation techniques. 3. In recent years, several promising Machine Learning (ML) based Android malware detection approaches that achieve remarkable results have been proposed in the literature. Most of these approaches are built upon the batch learning model, where a common assumption of such model is that the underlying probability distribution of the observed characteristics belonging to the data source (i.e., malware samples) is stationary. However, apart from the arms race, mobile apps are constantly evolving due to several factors such as environmental changes and adding features. These evolutions cause the distribution of the population to change over time. Moreover, in the real-world use case, the malware detection models are trained on the existing dataset and used to predict forthcoming samples that stream in. Consequently, in the face of malware evolution, the detection accuracy of the model in the real-world scenario will degrade over time. We perform iii a systematic study to examine the challenges faced by state-of-the-art ML based Android malware detection approaches in the presence of concept drift. Furthermore, we propose and evaluate the modification to the approaches that may help them to overcome their limitations in handling streaming features, samples, and classes. 4. Traditionally, extensive feature engineering effort is spent to develop a solution for each of the critical Android program analytics tasks to address the multitude of problems have plagued the Android ecosystem. Hence, we aim to build holistic behavioral profiles of Android apps with rich and multi-modal information (e.g., incorporating several semantic views of an app such as API calls, system calls, etc.). Such profiles could be used to address various downstream program analytics tasks such as malware detection, clone detection, and app recommendation etc. Towards this goal, we design a data-driven Representation Learning (RL) framework named apk2vec which incorporates various state-of-the-art RL paradigm such as semisupervised, multiview and hash embedding techniques to automatically generate succinct and versatile representation (aka profile or embedding) for Android apps. In sum, this thesis proposes three methods and one empirical study with suggestions for Android apps analysis. We address four specific issues that plague Android security, namely, app clone detection, third-party library detection, malware detection, and concept drift. We do so through leveraging on techniques such as program analysis, Machine Learning and Deep Learning.},
author = {C. Soh},
doi = {10.32657/10220/47894},
}

@article{16c08ea8f6548eef80bbacaeed33cf5f46b25b2a,
title = {TUAL INFORMATION MAXIMIZATION},
year = {2020},
url = {https://www.semanticscholar.org/paper/16c08ea8f6548eef80bbacaeed33cf5f46b25b2a},
abstract = {This paper studies learning the representations of whole graphs in both unsupervised and semi-supervised scenarios. Graph-level representations are critical in a variety of real-world applications such as predicting the properties of molecules and community analysis in social networks. Traditional graph kernel based methods are simple, yet effective for obtaining fixed-length representations for graphs but they suffer from poor generalization due to hand-crafted designs. There are also some recent methods based on language models (e.g. graph2vec) but they tend to only consider certain substructures (e.g. subtrees) as graph representatives. Inspired by recent progress of unsupervised representation learning, in this paper we proposed a novel method called InfoGraph for learning graph-level representations. We maximize the mutual information between the graph-level representation and the representations of substructures of different scales (e.g., nodes, edges, triangles). By doing so, the graph-level representations encode aspects of the data that are shared across different scales of substructures. Furthermore, we further propose InfoGraph*, an extension of InfoGraph for semi-supervised scenarios. InfoGraph* maximizes the mutual information between unsupervised graph representations learned by InfoGraph and the representations learned by existing supervised methods. As a result, the supervised encoder learns from unlabeled data while preserving the latent semantic space favored by the current supervised task. Experimental results on the tasks of graph classification and molecular property prediction show that InfoGraph is superior to state-of-the-art baselines and InfoGraph* can achieve performance competitive with state-of-the-art semi-supervised models.},
author = {Fan-Yun Sun and Jordan Hoffmann and Vikas Verma and Jian Tang},
}

@article{1a26923c8112ffa0497ec9cb679ce9d57f7143d0,
title = {Learning distributed representations of graphs with Geo2DR},
year = {2020},
url = {https://www.semanticscholar.org/paper/1a26923c8112ffa0497ec9cb679ce9d57f7143d0},
abstract = {We present Geo2DR (Geometric to Distributed Representations), a GPU ready Python library for unsupervised learning on graph-structured data using discrete substructure patterns and neural language models. It contains efficient implementations of popular graph decomposition algorithms and neural language models in PyTorch which can be combined to learn representations of graphs using the distributive hypothesis. Furthermore, Geo2DR comes with general data processing and loading methods to bring substantial speed-up in the training of the neural language models. Through this we provide a modular set of tools and methods to quickly construct systems capable of learning distributed representations of graphs. This is useful for replication of existing methods, modification, or development of completely new methods. This paper serves to present the Geo2DR library and perform a comprehensive comparative analysis of existing methods re-implemented using Geo2DR across widely used graph classification benchmarks. Geo2DR displays a high reproducibility of results in published methods and interoperability with other libraries useful for distributive language modelling.},
author = {P. Scherer and P. Lio’},
arxivid = {2003.05926},
}

@article{8ce7c67095d76da23897cc379c063986e9843a7c,
title = {Design of multi-view graph embedding using multiple kernel learning},
year = {2020},
url = {https://www.semanticscholar.org/paper/8ce7c67095d76da23897cc379c063986e9843a7c},
abstract = {Abstract The graph embedding is the process of representing the graph in a vector space using properties of the graphs and this technique has now being widely used for analyzing the graph data using machine learning algorithms. The existing graph embeddings rely mostly on a single property of graphs for data representation which is found to be inappropriate to capture all the characteristics of the data. Hence we designed graph embedding using multi-view approach, where each view is an embedding of the graph using a graph property. The input space of multi-view learning is then taken as the direct sum of the subspaces in which the graph embedding lie. We did analysis on real world data by incorporating the proposed model on support vector machines (SVM). The reproducing kernel used in SVM is represented as the linear combination of the kernels defined on the individual embeddings. The optimization technique used in simple multiple kernel learning (simpleMKL) is used to find the parameters of the optimal kernel. To analyze the individual representation capability of the embeddings, an R-convolution graph kernel is designed over each of the views. In our experimental analysis, the multi-view graph embedding showed a superior performance in comparison with that of the state-of-the-art graph embeddings as well as graph kernels.},
author = {Asif Salim and S. Shiju and S. Sumitra},
doi = {10.1016/j.engappai.2020.103534},
}

@article{d28823f812b83ac957ac5077216766cba29d211d,
title = {Dynamic Graph Embedding},
year = {2020},
url = {https://www.semanticscholar.org/paper/d28823f812b83ac957ac5077216766cba29d211d},
abstract = {In Chap. 9, we presented a structural graph convolutional neural network which is capable of performing supervising learning to estimate a function between non-euclidean data and categorical data. In this chapter, we focus on non-euclidean data which are evolving over time. In the cyber-physical system, most of the non-euclidean data (such as engineering data, energy, and signal flow graph, call graph of the firmware, etc.) are always evolving. Hence, it is necessary to utilize algorithms that are capable of handling such temporally evolving non-euclidean data. In this chapter, we present a novel dynamic graph embedding algorithm to handle this issue. In the rest of the chapter, we consider temporally evolving graphs as the non-euclidean data and present an algorithm capable of capturing the pattern of time-varying links.},
author = {Sujit Rokka Chhetri and Mohammad Abdullah Al Faruque},
doi = {10.1007/978-3-030-37962-9_10},
}

@article{e02f59cf876cb40233573ff78a1609f969d301cc,
title = {subgraph2vec: Learning Distributed Representations of Rooted Sub-graphs from Large Graphs},
year = {2016},
url = {https://www.semanticscholar.org/paper/e02f59cf876cb40233573ff78a1609f969d301cc},
abstract = {In this paper, we present subgraph2vec, a novel approach for learning latent representations of rooted subgraphs from large graphs inspired by recent advancements in Deep Learning and Graph Kernels. These latent representations encode semantic substructure dependencies in a continuous vector space, which is easily exploited by statistical models for tasks such as graph classification, clustering, link prediction and community detection. subgraph2vec leverages on local information obtained from neighbourhoods of nodes to learn their latent representations in an unsupervised fashion. We demonstrate that subgraph vectors learnt by our approach could be used in conjunction with classifiers such as CNNs, SVMs and relational data clustering algorithms to achieve significantly superior accuracies. Also, we show that the subgraph vectors could be used for building a deep learning variant of Weisfeiler-Lehman graph kernel. Our experiments on several benchmark and large-scale real-world datasets reveal that subgraph2vec achieves significant improvements in accuracies over existing graph kernels on both supervised and unsupervised learning tasks. Specifically, on two realworld program analysis tasks, namely, code clone and malware detection, subgraph2vec outperforms state-of-the-art kernels by more than 17% and 4%, respectively.},
author = {A. Narayanan and Mahinthan Chandramohan and Lihui Chen and Yang Liu and S. Saminathan},
arxivid = {1606.08928},
}

@article{deab480edf84c5d968e93c55dbbfe727d6fc52fb,
title = {Distribution of Node Embeddings as Multiresolution Features for Graphs},
year = {2019},
url = {https://www.semanticscholar.org/paper/deab480edf84c5d968e93c55dbbfe727d6fc52fb},
abstract = {Graph classification is an important problem in many fields, from bioinformatics and neuroscience to computer vision and social network analysis. That said, the task of comparing graphs for the purpose of graph classification faces several major challenges. In particular, an effective graph comparison method must (1) expressively and inductively compare graphs; (2) efficiently compare large graphs; and (3) enable the use of fast machine learning models for graph classification. To address such challenges, we propose Randomized Grid Mapping (RGM), a fast-to-compute feature map that represents a graph via the distribution of its node embeddings in feature space. We justify RGM with close connections to kernel methods: RGM provably approximates the Laplacian kernel mean map and has the multiresolution properties of the pyramid match kernel. We also show that RGM can be extended to incorporate node labels using the Weisfeiler-Lehman framework. Extensive experiments show that graph classification accuracy with RGM feature maps is better than or competitive with many powerful graph kernels, unsupervised graph feature mappings, and deep neural networks. Moreover, comparing graphs based on their node embeddings with RGM is up to an order of magnitude faster than competitive baselines, while maintaining high classification accuracy.},
author = {Mark Heimann and Tara Safavi and Danai Koutra},
doi = {10.1109/ICDM.2019.00039},
}

@article{7a46a228adde697a03ddb92e64538ae0c7b4edd7,
title = {A Visual Analytics Approach for Structural Differences among Transportation Networks},
year = {2020},
url = {https://www.semanticscholar.org/paper/7a46a228adde697a03ddb92e64538ae0c7b4edd7},
abstract = {},
author = {Dongming Han and Jiacheng Pan and Cong Xie and Xiaodong Zhao and Wei Chen},
doi = {10.1016/J.IFACOL.2021.04.226},
}

@article{77c88030ede1a9ccc2ccce9abecd97e6838e1e9a,
title = {Understanding microbiome dynamics via interpretable graph representation learning},
year = {2022},
url = {https://www.semanticscholar.org/paper/77c88030ede1a9ccc2ccce9abecd97e6838e1e9a},
abstract = {Large-scale perturbations in the microbiome constitution are strongly correlated, whether as a driver or a consequence, with the health and functioning of human physiology. However, understanding the difference in the microbiome profiles of healthy and ill individuals can be complicated due to the large number of complex interactions among microbes. We propose to model these interactions as a time-evolving graph whose nodes are microbes and edges are interactions among them. Motivated by the need to analyse such complex interactions, we develop a method that learns a low-dimensional representation of the time-evolving graph and maintains the dynamics occurring in the highdimensional space. Through our experiments, we show that we can extract graph features such as clusters of nodes or edges that have the highest impact on the model to learn the low-dimensional representation. This information can be crucial to identify microbes and interactions among them that are strongly correlated with clinical diseases. We conduct our experiments on both synthetic and real-world microbiome datasets.},
author = {K. Melnyk and Kuba Weimann and T. Conrad},
doi = {10.48550/arXiv.2203.01830},
arxivid = {2203.01830},
}

@article{5a70b92c20313840697a667eac2f3a24bcb6ef88,
title = {Complex Networks Classification with Convolutional Neural Netowrk},
year = {2018},
url = {https://www.semanticscholar.org/paper/5a70b92c20313840697a667eac2f3a24bcb6ef88},
abstract = {Classifying large-scale networks into several categories and distinguishing them according to their ne structures is of great importance with several applications in real life. However, most studies of complex networks focus on properties of a single network but seldom on classication, clustering, and comparison between different networks, in which the network is treated as a whole. Due to the non-Euclidean properties of the data, conventional methods can hardly be applied on networks directly. In this paper, we propose a novel framework of complex network classier (CNC) by integrating network embedding and convolutional neural network to tackle the problem of network classication. By training the classier on synthetic complex network data and real international trade network data, we show CNC can not only classify networks in a high accuracy and robustness, it can also extract the features of the networks automatically.},
author = {Ruyue Xin},
}

@article{1aabc3f94479940437158675515ee45f9b18bef9,
title = {Robust Hierarchical Graph Classification with Subgraph Attention},
year = {2020},
url = {https://www.semanticscholar.org/paper/1aabc3f94479940437158675515ee45f9b18bef9},
abstract = {Graph neural networks get significant attention for graph representation and classification in machine learning community. Attention mechanism applied on the neighborhood of a node improves the performance of graph neural networks. Typically, it helps to identify a neighbor node which plays more important role to determine the label of the node under consideration. But in real world scenarios, a particular subset of nodes together, but not the individual pairs in the subset, may be important to determine the label of the graph. To address this problem, we introduce the concept of subgraph attention for graphs. On the other hand, hierarchical graph pooling has been shown to be promising in recent literature. But due to noisy hierarchical structure of real world graphs, not all the hierarchies of a graph play equal role for graph classification. Towards this end, we propose a graph classification algorithm called SubGattPool which jointly learns the subgraph attention and employs two different types of hierarchical attention mechanisms to find the important nodes in a hierarchy and the importance of individual hierarchies in a graph. Experimental evaluation with different types of graph classification algorithms shows that SubGattPool is able to improve the state-of-the-art or remains competitive on multiple publicly available graph classification datasets. We conduct further experiments on both synthetic and real world graph datasets to justify the usefulness of different components of SubGattPool and to show its consistent performance on other downstream tasks.},
author = {S. Bandyopadhyay and Manasvi Aggarwal and M. N. Murty},
arxivid = {2007.10908},
}

@article{0c31441de0e50b3a76a2e7908835d42a815a7e7f,
title = {graph2vec: Learning Distributed Representations of Graphs},
year = {2017},
url = {https://www.semanticscholar.org/paper/0c31441de0e50b3a76a2e7908835d42a815a7e7f},
abstract = {Recent works on representation learning for graph structured data predominantly focus on learning distributed representations of graph substructures such as nodes and subgraphs. However, many graph analytics tasks such as graph classification and clustering require representing entire graphs as fixed length feature vectors. While the aforementioned approaches are naturally unequipped to learn such representations, graph kernels remain as the most effective way of obtaining them. However, these graph kernels use handcrafted features (e.g., shortest paths, graphlets, etc.) and hence are hampered by problems such as poor generalization. To address this limitation, in this work, we propose a neural embedding framework named graph2vec to learn data-driven distributed representations of arbitrary sized graphs. graph2vec's embeddings are learnt in an unsupervised manner and are task agnostic. Hence, they could be used for any downstream task such as graph classification, clustering and even seeding supervised representation learning approaches. Our experiments on several benchmark and large real-world datasets show that graph2vec achieves significant improvements in classification and clustering accuracies over substructure representation learning approaches and are competitive with state-of-the-art graph kernels.},
author = {A. Narayanan and Mahinthan Chandramohan and R. Venkatesan and Lihui Chen and Yang Liu and Shantanu Jaiswal},
arxivid = {1707.05005},
}

@article{3ecd1c8278c716c87ed5fb883ad3a0c82acb4573,
title = {DEDGCN: Dual Evolving Dynamic Graph Convolutional Network},
year = {2022},
url = {https://www.semanticscholar.org/paper/3ecd1c8278c716c87ed5fb883ad3a0c82acb4573},
abstract = {With the wide application of graph data in many fields, the research of graph representation learning technology has become the focus of scholars’ attention. Especially, dynamic graph representation learning is an important part of solving the problem of change graph in reality. On the one hand, most dynamic graph representation methods focus either on graph structure changes or node embedding changes, ignoring the internal relationship. On the other hand, most dynamic graph neural networks require learn node embeddings from specific tasks, resulting in poor universality of node embeddings and cannot be used in unsupervised tasks. Hence, Dual Evolving Dynamic Graph Convolutional Network (DEDGCN) was proposed to solve the above problems. DEDGCN uses the recurrent neural network to push the evolvement of GCN and nodes, from which it can extract the structural features of dynamic graph and learns the stability features of nodes, respectively, forming an adaptive dynamic graph convolution network. DEDGCN can be classified as unsupervised graph convolutional network. Thus, it is capable of training the unlabeled dynamic graph, it has more extensive application scenarios, and the calculated node embedding has strong generality. We evaluate our proposed method on experimental data in three tasks which are node classification, edge classification, and link prediction. In the classification task, facing the graph with large scale, complex connection relationship, and uncertain change rule, the F1 value of node classification task obtained by DEDGCN reaches 77%, and the F1 value of edge classification task reaches more than 90%. The results show that DEDGCN is effective in capturing graph features, and the effect of DEDGCN is much higher than other baseline methods, which proves the importance of capturing node stability features in dynamic graph representation learning. At the same time, the ability of DEDGCN in unsupervised tasks is further verified by using clustering and anomaly detection tasks, which proves that DEDGCN learning network embedding is widely used.},
author = {Fengzhe Zhong and Y. Liu and Lian Liu and Guangsheng Zhang and Shunran Duan},
doi = {10.1155/2022/6945397},
}

@article{2c72d70b3dfa59935e330b9283a6d719b3ab4429,
title = {LncRNA-Disease Association Prediction Based on Graph Neural Networks and Inductive Matrix Completion},
year = {2020},
url = {https://www.semanticscholar.org/paper/2c72d70b3dfa59935e330b9283a6d719b3ab4429},
abstract = {},
author = {Lin Yuan and Jing Zhao and Tao Sun and Xuesong Jiang and Zhe Yang and Xin-Gang Wang and Yu-Shui Geng},
doi = {10.1007/978-3-030-60802-6_23},
}

@article{070b1a199d1ad1ddb8e901de1ff4de601c57b508,
title = {Recent Advances in Kernel-Based Graph Classification},
year = {2017},
url = {https://www.semanticscholar.org/paper/070b1a199d1ad1ddb8e901de1ff4de601c57b508},
abstract = {We review our recent progress in the development of graph kernels. We discuss the hash graph kernel framework, which makes the computation of kernels for graphs with vertices and edges annotated with real-valued information feasible for large data sets. Moreover, we summarize our general investigation of the benefits of explicit graph feature maps in comparison to using the kernel trick. Our experimental studies on real-world data sets suggest that explicit feature maps often provide sufficient classification accuracy while being computed more efficiently. Finally, we describe how to construct valid kernels from optimal assignments to obtain new expressive graph kernels. These make use of the kernel trick to establish one-to-one correspondences. We conclude by a discussion of our results and their implication for the future development of graph kernels.},
author = {Nils M. Kriege and Christopher Morris},
doi = {10.1007/978-3-319-71273-4_37},
}

@article{a023c915c9ddcc16b7337674244e37ce7dd3f20c,
title = {GRaDL: A Framework for Animal Genome Sequence Classification with Graph Representations and Deep Learning},
year = {2020},
url = {https://www.semanticscholar.org/paper/a023c915c9ddcc16b7337674244e37ce7dd3f20c},
abstract = {Bovine Respiratory Disease Complex (BRDC) is a complex respiratory disease in cattle with multiple etiologies, including bacterial and viral. It is estimated that mortality, morbidity, therapy, and quarantine resulting from BRDC account for significant losses in the cattle industry. Early detection and management of BRDC are crucial in mitigating economic losses. Current animal disease diagnostics is based on traditional tests such as bacterial culture, serolog, and Polymerase Chain Reaction (PCR) tests. Advancements of data analytics and machine learning are setting trends in several metagenome sequencing applications. In this work, we demonstrate a machine learning approach to identify pathogen signatures present in bovine metagenome sequences using k-mer-based network embedding followed by a deep learning-based classification task. With experiments conducted on two different simulated datasets, we show that networks-based deep learning approaches can detect pathogen signatures with up to 89.7% accuracy. We will make the simulated data used in our experiments available publicly upon request to tackle this important problem with more innovative approaches.},
author = {S. Narayanan and A. Ramachandran and Sathyanarayanan N. Aakur and A. Bagavathi},
doi = {10.1109/ICMLA51294.2020.00203},
}

@article{9c0328fd386e6994eaf62742e92627d4937b68d1,
title = {TNE: A Latent Model for Representation Learning on Networks},
year = {2018},
url = {https://www.semanticscholar.org/paper/9c0328fd386e6994eaf62742e92627d4937b68d1},
abstract = {Network representation learning (NRL) methods aim to map each vertex into a low dimensional space by preserving the local and global structure of a given network, and in recent years they have received a significant attention thanks to their success in several challenging problems. Although various approaches have been proposed to compute node embeddings, many successful methods benefit from random walks in order to transform a given network into a collection of sequences of nodes and then they target to learn the representation of nodes by predicting the context of each vertex within the sequence. In this paper, we introduce a general framework to enhance the embeddings of nodes acquired by means of the random walk-based approaches. Similar to the notion of topical word embeddings in NLP, the proposed method assigns each vertex to a topic with the favor of various statistical models and community detection methods, and then generates the enhanced community representations. We evaluate our method on two downstream tasks: node classification and link prediction. The experimental results demonstrate that the incorporation of vertex and topic embeddings outperform widely-known baseline NRL methods.},
author = {Abdulkadir Çelikkanat and Fragkiskos D. Malliaros},
arxivid = {1810.06917},
}

@article{b41821c53add641b40c3ac62a3e645e7c1dafaf7,
title = {Explicit Versus Implicit Graph Feature Maps: A Computational Phase Transition for Walk Kernels},
year = {2014},
url = {https://www.semanticscholar.org/paper/b41821c53add641b40c3ac62a3e645e7c1dafaf7},
abstract = {As many real-world data can elegantly be represented as graphs, various graph kernels and methods for computing them have been proposed. Surprisingly, many of the recent graph kernels do not employ the kernel trick anymore but rather compute an explicit feature map and report higher efficiency. So, is there really no benefit of the kernel trick when it comes to graphs? Triggered by this question, we investigate under which conditions it is possible to compute a graph kernel explicitly and for which graph properties this computation is actually more efficient. We give a sufficient condition for R-convolution kernels that enables kernel computation by explicit mapping. We theoretically and experimentally analyze efficiency and flexibility of implicit kernel functions and dot products of explicitly computed feature maps for widely used graph kernels such as random walk kernels, sub graph matching kernels, and shortest-path kernels. For walk kernels we observe a phase transition when comparing runtime with respect to label diversity and walk lengths leading to the conclusion that explicit computations are only favourable for smaller label sets and walk lengths whereas implicit computation is superior for longer walk lengths and data sets with larger label diversity.},
author = {Nils M. Kriege and Marion Neumann and K. Kersting and Petra Mutzel},
doi = {10.1109/ICDM.2014.129},
}

@article{2fb59ebe271d6b007bb0429c1701fd1004782d1b,
title = {InfoGraph: Unsupervised and Semi-supervised Graph-Level Representation Learning via Mutual Information Maximization},
year = {2019},
url = {https://www.semanticscholar.org/paper/2fb59ebe271d6b007bb0429c1701fd1004782d1b},
abstract = {This paper studies learning the representations of whole graphs in both unsupervised and semi-supervised scenarios. Graph-level representations are critical in a variety of real-world applications such as predicting the properties of molecules and community analysis in social networks. Traditional graph kernel based methods are simple, yet effective for obtaining fixed-length representations for graphs but they suffer from poor generalization due to hand-crafted designs. There are also some recent methods based on language models (e.g. graph2vec) but they tend to only consider certain substructures (e.g. subtrees) as graph representatives. Inspired by recent progress of unsupervised representation learning, in this paper we proposed a novel method called InfoGraph for learning graph-level representations. We maximize the mutual information between the graph-level representation and the representations of substructures of different scales (e.g., nodes, edges, triangles). By doing so, the graph-level representations encode aspects of the data that are shared across different scales of substructures. Furthermore, we further propose InfoGraph*, an extension of InfoGraph for semi-supervised scenarios. InfoGraph* maximizes the mutual information between unsupervised graph representations learned by InfoGraph and the representations learned by existing supervised methods. As a result, the supervised encoder learns from unlabeled data while preserving the latent semantic space favored by the current supervised task. Experimental results on the tasks of graph classification and molecular property prediction show that InfoGraph is superior to state-of-the-art baselines and InfoGraph* can achieve performance competitive with state-of-the-art semi-supervised models.},
author = {Fan-Yun Sun and Jordan Hoffmann and Jian Tang},
arxivid = {1908.01000},
}

@article{a05b44904522b301701b96431099689f3ceab5a5,
title = {GCN-LASE: Towards Adequately Incorporating Link Attributes in Graph Convolutional Networks},
year = {2019},
url = {https://www.semanticscholar.org/paper/a05b44904522b301701b96431099689f3ceab5a5},
abstract = {Graph Convolutional Networks (GCNs) have proved to be a most powerful architecture in aggregating local neighborhood information for individual graph nodes. Low-rank proximities and node features are successfully leveraged in existing GCNs, however, attributes that graph links may carry are commonly ignored, as almost all of these models simplify graph links into binary or scalar values describing node connectedness. In our paper instead, links are reverted to hypostatic relationships between entities with descriptional attributes. We propose GCN-LASE (GCN with Link Attributes and Sampling Estimation), a novel GCN model taking both node and link attributes as inputs. To adequately captures the interactions between link and node attributes, their tensor product is used as neighbor features, based on which we define several graph kernels and further develop according architectures for LASE. Besides, to accelerate the training process, the sum of features in entire neighborhoods are estimated through Monte Carlo method, with novel  sampling strategies designed for LASE to minimize the estimation variance. Our experiments show that LASE outperforms strong baselines over various graph datasets, and further experiments corroborate the informativeness of link attributes and our model's ability of adequately leveraging them.},
author = {Ziyao Li and Liang Zhang and Guojie Song},
doi = {10.24963/ijcai.2019/410},
arxivid = {1902.09817},
}

@article{e51e557cf4701510916bb1444074f62e6a04f889,
title = {Anonymous Walk Embeddings},
year = {2018},
url = {https://www.semanticscholar.org/paper/e51e557cf4701510916bb1444074f62e6a04f889},
abstract = {The task of representing entire graphs has seen a surge of prominent results, mainly due to learning convolutional neural networks (CNNs) on graph-structured data. While CNNs demonstrate state-of-the-art performance in graph classification task, such methods are supervised and therefore steer away from the original problem of network representation in task-agnostic manner. Here, we coherently propose an approach for embedding entire graphs and show that our feature representations with SVM classifier increase classification accuracy of CNN algorithms and traditional graph kernels. For this we describe a recently discovered graph object, anonymous walk, on which we design task-independent algorithms for learning graph representations in explicit and distributed way. Overall, our work represents a new scalable unsupervised learning of state-of-the-art representations of entire graphs.},
author = {Sergey Ivanov and Evgeny Burnaev},
arxivid = {1805.11921},
}

@article{6af7126fea32189b8754ef2f1e1b8477729cc19e,
title = {Towards Machine Learning Enabled Automatic Design of IT-Network Architectures},
year = {2019},
url = {https://www.semanticscholar.org/paper/6af7126fea32189b8754ef2f1e1b8477729cc19e},
abstract = {There are many machine learning techniques that cannot be performed on graph-data. Techniques such as graph embedding, i.e mapping a graph to a vector, can open up a variety of machine learning sol ...},
author = {Lova Wåhlin},
}

@article{b607645f076d636fa4615fc275e3e50e9a462828,
title = {Unsupervised Graph Representation by Periphery and Hierarchical Information Maximization},
year = {2020},
url = {https://www.semanticscholar.org/paper/b607645f076d636fa4615fc275e3e50e9a462828},
abstract = {Deep representation learning on non-Euclidean data types, such as graphs, has gained significant attention in recent years. Invent of graph neural networks has improved the state-of-the-art for both node and the entire graph representation in a vector space. However, for the entire graph representation, most of the existing graph neural networks are trained on a graph classification loss in a supervised way. But obtaining labels of a large number of graphs is expensive for real world applications. Thus, we aim to propose an unsupervised graph neural network to generate a vector representation of an entire graph in this paper. For this purpose, we combine the idea of hierarchical graph neural networks and mutual information maximization into a single framework. We also propose and use the concept of periphery representation of a graph and show its usefulness in the proposed algorithm which is referred as GraPHmax. We conduct thorough experiments on several real-world graph datasets and compare the performance of GraPHmax with a diverse set of both supervised and unsupervised baseline algorithms. Experimental results show that we are able to improve the state-of-the-art for multiple graph level tasks on several real-world datasets, while remain competitive on the others.},
author = {S. Bandyopadhyay and Manasvi Aggarwal and M. N. Murty},
arxivid = {2006.04696},
}

@article{9f6de9ccf8d74ce8d16a71c3e7eb7f462185dfbe,
title = {Detecting DoS Attack in Smart Home IoT Devices Using a Graph-Based Approach},
year = {2019},
url = {https://www.semanticscholar.org/paper/9f6de9ccf8d74ce8d16a71c3e7eb7f462185dfbe},
abstract = {The use of the Internet of Things (IoT) devices has surged in recent years. However, due to the lack of substantial security, IoT devices are vulnerable to cyber-attacks like Denial-of-Service (DoS) attacks. Most of the current security solutions are either computationally expensive or unscalable as they require known attack signatures or full packet inspection. In this paper, we introduce a novel Graph-based Outlier Detection in Internet of Things (GODIT) approach that (i) represents smart home IoT traffic as a real-time graph stream, (ii) efficiently processes graph data, and (iii) detects DoS attack in real-time. The experimental results on real-world data collected from IoT-equipped smart home show that GODIT is more effective than the traditional machine learning approaches, and is able to outperform current graph-stream anomaly detection approaches.},
author = {R. Paudel and Timothy Muncy and W. Eberle},
doi = {10.1109/BigData47090.2019.9006156},
}

@article{5a99eb5e54959dd873b3ae777c90b10073a4099b,
title = {A Simple Embedding for Classifying Networks with a few Graphlets},
year = {2020},
url = {https://www.semanticscholar.org/paper/5a99eb5e54959dd873b3ae777c90b10073a4099b},
abstract = {Complex networks are a key analytical tool for complex systems. However if one wants to apply this tool in machine learning applications where the data is non-relational data one must find an appropriate network embedding. The embedding represents a network in a vector space, while preserving information about network structure. In this paper, we propose a simple network embedding technique that avoids the need for graph kernels or convolutional networks, as have previously been advocated. Our embedding is based on 3-node and 4-node graphlet counts combined with some feature extraction based on a Principal Component Analysis (PCA). We show that it is competitive with some state-of-the-art methods on a downstream classification task. We then show how to reduce the computational effort in the method by transforming extraction into a feature selection procedure. We claim that this selection procedure, a generalisation of PCA, is more meaningful than a popular alternative.},
author = {L. L. Gorrec and P. Knight},
doi = {10.1109/ASONAM49781.2020.9381337},
}

@article{263b148c1746c0473de440f50bff6323b77eb4a3,
title = {Hierarchically Attentive Graph Pooling with Subgraph Attention},
year = {2020},
url = {https://www.semanticscholar.org/paper/263b148c1746c0473de440f50bff6323b77eb4a3},
abstract = {Graph neural networks got significant attention for graph representation and classification in machine learning community. Different types of neighborhood aggregation and pooling strategies have been proposed in the literature. In this work, we introduce a higher order hierarchical GNN algorithm (SubGattPool) by employing (i) an attention mechanism which learns the importance and aggregates neighboring subgraphs of a node instead of first-order neighbors, and (ii) a hierarchical pooling strategy which learns the importance of different hierarchies in a GNN. SubGattPool is able to achieve state-of-the-art graph classification performance on multiple real-world datasets.},
author = {S. Bandyopadhyay and Manasvi Aggarwal and M. N. Murty},
}

@article{e40b9eedf533b9e69468da2ce4fa185be75e8c07,
title = {KONG: Kernels for ordered-neighborhood graphs},
year = {2018},
url = {https://www.semanticscholar.org/paper/e40b9eedf533b9e69468da2ce4fa185be75e8c07},
abstract = {We present novel graph kernels for graphs with node and edge labels that have ordered neighborhoods, i.e. when neighbor nodes follow an order. Graphs with ordered neighborhoods are a natural data representation for evolving graphs where edges are created over time, which induces an order. Combining convolutional subgraph kernels and string kernels, we design new scalable algorithms for generation of explicit graph feature maps using sketching techniques. We obtain precise bounds for the approximation accuracy and computational complexity of the proposed approaches and demonstrate their applicability on real datasets. In particular, our experiments demonstrate that neighborhood ordering results in more informative features. For the special case of general graphs, i.e. graphs without ordered neighborhoods, the new graph kernels yield efficient and simple algorithms for the comparison of label distributions between graphs.},
author = {M. Draief and Konstantin Kutzkov and Kevin Scaman and M. Vojnović},
arxivid = {1805.10014},
}

@article{a7d8109ec57f564e71e80c6067a3a4d0475ae4a7,
title = {Node, Motif and Subgraph: Leveraging Network Functional Blocks Through Structural Convolution},
year = {2018},
url = {https://www.semanticscholar.org/paper/a7d8109ec57f564e71e80c6067a3a4d0475ae4a7},
abstract = {Networks or graphs provide a natural and generic way for modeling rich structured data. Recent research on graph analysis has been focused on representation learning, of which the goal is to encode the network structures into distributed embedding vectors, so as to enable various downstream applications through off-the-shelf machine learning. However, existing methods mostly focus on node-level embedding, which is insufficient for subgraph analysis. Moreover, their leverage of network structures through path sampling or neighborhood preserving is implicit and coarse. Network motifs allow graph analysis in a finer granularity, but existing methods based on motif matching are limited to enumerated simple motifs and do not leverage node labels and supervision. In this paper, we develop NEST, a novel hierarchical network embedding method combining motif filtering and convolutional neural networks. Motif-based filtering enables NEST to capture exact small structures within networks, and convolution over the filtered embedding allows it to fully explore complex substructures and their combinations. NEST can be trivially applied to any domain and provide insight into particular network functional blocks. Extensive experiments on protein function prediction, drug toxicity prediction and social network community identification have demonstrated its effectiveness and efficiency.},
author = {Carl Yang and Mengxiong Liu and V. Zheng and Jiawei Han},
doi = {10.1109/ASONAM.2018.8508729},
}

@article{fcd4036f4e01e93188a3122ddbf2442c91c4e2cd,
title = {Semi-Supervised Hierarchical Graph Classification},
year = {2022},
url = {https://www.semanticscholar.org/paper/fcd4036f4e01e93188a3122ddbf2442c91c4e2cd},
abstract = {Node classification and graph classification are two graph learning problems that predict the class label of a node and the class label of a graph respectively. A node of a graph usually represents a real-world entity, e.g., a user in a social network, or a document in a document citation network. In this work, we consider a more challenging but practically useful setting, in which a node itself is a graph instance. This leads to a hierarchical graph perspective which arises in many domains such as social network, biological network and document collection. We study the node classification problem in the hierarchical graph where a “node” is a graph instance. As labels are usually limited, we design a novel semi-supervised solution named SEAL-CI. SEAL-CI adopts an iterative framework that takes turns to update two modules, one working at the graph instance level and the other at the hierarchical graph level. To enforce a consistency among different levels of hierarchical graph, we propose the Hierarchical Graph Mutual Information (HGMI) and further present a way to compute HGMI with theoretical guarantee. We demonstrate the effectiveness of this hierarchical graph modeling and the proposed SEAL-CI method on text and social network data.},
author = {Jia Li and Yongfeng Huang and Heng Chang and Yu Rong},
doi = {10.48550/arXiv.2206.05416},
arxivid = {2206.05416},
}

@article{01b5e7a8f0a701625b8d0d77fdd6ce6ca346dd0c,
title = {Graph Kernels Based on Multi-scale Graph Embeddings},
year = {2022},
url = {https://www.semanticscholar.org/paper/01b5e7a8f0a701625b8d0d77fdd6ce6ca346dd0c},
abstract = {—Graph kernels are conventional methods for com- puting graph similarities. However, most of the R-convolution graph kernels face two challenges: 1) They cannot compare graphs at multiple different scales, and 2) they do not consider the distributions of substructures when computing the kernel matrix. These two challenges limit their performances. To mitigate the two challenges, we propose a novel graph kernel called the Multi- scale Path-pattern Graph kernel (MPG), at the heart of which is the multi-scale path-pattern node feature map. Each element of the path-pattern node feature map is the number of occurrences of a path-pattern around a node. A path-pattern is constructed by the concatenation of all the node labels in a path of a truncated BFS tree rooted at each node. Since the path-pattern node feature map can only compare graphs at local scales, we incorporate into it the multiple different scales of the graph structure, which are captured by the truncated BFS trees of different depth. We use the Wasserstein distance to compute the similarity between the multi-scale path-pattern node feature maps of two graphs, considering the distributions of substructures. We empirically validate MPG on various benchmark graph datasets and demonstrate that it achieves state-of-the-art performance.},
author = {Wei Ye and Hao Tian and Qi Chen},
doi = {10.48550/arXiv.2206.00979},
arxivid = {2206.00979},
}

@article{15e2268897ee152526136296fe4b02a69846819a,
title = {A Network-Driven Approach for LncRNA-Disease Association Mapping},
year = {2020},
url = {https://www.semanticscholar.org/paper/15e2268897ee152526136296fe4b02a69846819a},
abstract = {},
author = {Lin Yuan and Tao Sun and Jing Zhao and Song Liu and Ai-Min Li and Qin Lu and Yu-Shui Geng and Xin-Gang Wang},
doi = {10.1007/978-3-030-60802-6_17},
}
